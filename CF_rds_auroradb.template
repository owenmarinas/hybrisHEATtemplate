{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "aurora.template - Creates the necessary resources for an RDS instance. Please be aware that this template will create resources for which you will be charged.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Parameters": [
            "SecurityGroupList",
            "Subnets"
          ],
          "Label": {
            "default": "Network Configuration"
          }
        },
        {
          "Parameters": [
            "AuroraEngine",
            "AutoMinorVersionUpgrade",
            "BinLogFormat",
            "DBInstanceClass",
            "DBInstanceIdentifier",
            "DBSnapshotARN",
            "DeletionProtection",
            "Environment",
            "KmsKeyId",
            "MasterUserPassword",
            "MasterUsername",
            "MultiAZ",
            "Port",
            "PreferredMaintenanceWindow",
            "PubliclyAccessible",
            "ReplicationSource",
            "StorageEncrypted"
          ],
          "Label": {
            "default": "Basic Configuration"
          }
        },
        {
          "Parameters": [
            "AuroraCloudwatchLogsExports",
            "CWCPUThreshold",
            "CWReadIopsLimit",
            "CWWriteIopsLimit",
            "EnableCloudwatchLogsExports",
            "EnablePerformanceInsights",
            "EnableRackspaceTicket",
            "NotificationTopic",
            "PerformanceInsightsRetentionPeriod"
          ],
          "Label": {
            "default": "Monitoring Configuration"
          }
        },
        {
          "Parameters": [
            "BacktrackWindow",
            "BackupRetentionPeriod",
            "PreferredBackupWindow"
          ],
          "Label": {
            "default": "Backups and Maintenance Configuration"
          }
        },
        {
          "Parameters": [
            "InternalRecordName",
            "InternalZoneId",
            "InternalZoneName"
          ],
          "Label": {
            "default": "Internal DNS Configuration"
          }
        },
        {
          "Parameters": [
            "RDSKMSRoleManagedPolicyArns",
            "RDSPIRoleManagedPolicyArns"
          ],
          "Label": {
            "default": "IAM Configuration"
          }
        }
      ],
      "ParameterLabels": {
        "SecurityGroupList": {
          "default": "Security Groups"
        }
      }
    }
  },
  "Parameters": {
    "EnablePerformanceInsights": {
      "Default": "false",
      "Type": "String",
      "Description": "If set to true, enables Performance Insights for the DB instance. Limited to specific versions. See: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "PubliclyAccessible": {
      "Default": "False",
      "Type": "String",
      "ConstraintDescription": "Must be either True or False.",
      "Description": "Indicates whether the database instance is an Internet-facing instance.",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "MasterUsername": {
      "Description": "The name of master user for the client DB instance.",
      "Default": "dbadmin",
      "MinLength": "1",
      "AllowedPattern": "^[^\\d][a-zA-Z0-9]+?$",
      "MaxLength": "64",
      "Type": "String"
    },
    "BacktrackWindow": {
      "Description": "The target backtrack window, in seconds. To disable backtracking, specify 0. If specified, this property must be set to a number from 0 to 259,200 (72 hours). Backtracking incurs a cost. This parameter is only evaluated for Aurora MySQL 5.6 compatible clusters.",
      "Default": "86400",
      "ConstraintDescription": "Must be a number between 0 and 259200",
      "MaxValue": "259200",
      "MinValue": "0",
      "Type": "Number"
    },
    "Environment": {
      "Default": "Development",
      "Type": "String",
      "Description": "Application environment for which this network is being created. e.g. Development/Production.",
      "AllowedValues": [
        "Development",
        "Integration",
        "PreProduction",
        "Production",
        "QA",
        "Staging",
        "Test"
      ]
    },
    "CWWriteIopsLimit": {
      "Default": "100000",
      "Type": "Number",
      "Description": "CloudWatch Write IOPSLimit Threshold"
    },
    "InternalRecordName": {
      "Default": "",
      "Type": "String",
      "Description": "Record Name for the new Resource Record in the Internal Hosted Zone"
    },
    "MasterUserPassword": {
      "Description": "Leaving this blank will auto generate a secure password with Secrets Mangaer. WARNING: Not available in all regions. See: https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/. Must be between 8 and 41 characters and cannot contain '@', '\"', or '\\/'.",
      "Default": "",
      "AllowedPattern": "^[\\p{ASCII}&&[^@\\s\\/\"]]+$||^$",
      "NoEcho": true,
      "MaxLength": "41",
      "Type": "String"
    },
    "DBSnapshotARN": {
      "Default": "",
      "Type": "String",
      "Description": "The identifier for the DB cluster snapshot from which you want to restore."
    },
    "BinLogFormat": {
      "Default": "OFF",
      "Type": "String",
      "Description": "Sets the desired format.  Defaults to OFF.  Should be set to MIXED if this Aurora cluster will replicate to another RDS Instance or cluster.  Ignored for aurora-postgresql engine.",
      "AllowedValues": [
        "OFF",
        "MIXED",
        "ROW",
        "STATEMENT"
      ]
    },
    "EnableRackspaceTicket": {
      "Default": "False",
      "Type": "String",
      "Description": "Specifies whether alarms will generate Rackspace tickets",
      "AllowedValues": [
        "False",
        "True"
      ]
    },
    "ReplicationSource": {
      "AllowedPattern": "^$|^arn:aws:rds:(us|eu|ap|sa|ca)-(east|west|north|south|southeast|northeast|central)-[1-9]:[0-9]+:cluster:.+$",
      "Default": "",
      "Type": "String",
      "Description": "The ARN of the master Aurora cluster that will replicate to the created cluster.  The master must be in a different region.  Leave this parameter blank to create a master Aurora cluster.",
      "ConstraintDescription": "Must be blank or a valid DB Cluster ARN"
    },
    "SecurityGroupList": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>",
      "Description": "A list of EC2 security groups to assign to this resource."
    },
    "PerformanceInsightsRetentionPeriod": {
      "Default": "7",
      "ConstraintDescription": "Valid values are 7 or 731 (2 years)",
      "Type": "String",
      "Description": "The amount of time, in days, to retain Performance Insights data. 7 days is free. 731 IS NOT free. See: https://aws.amazon.com/rds/performance-insights/pricing/?nc=sn&loc=2",
      "AllowedValues": [
        "7",
        "731"
      ]
    },
    "AutoMinorVersionUpgrade": {
      "Default": "True",
      "Type": "String",
      "ConstraintDescription": "Must be either True or False.",
      "Description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window.",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "InternalZoneName": {
      "Default": "",
      "Type": "String",
      "Description": "TLD for Internal Hosted Zone"
    },
    "CWReadIopsLimit": {
      "Default": "100000",
      "Type": "Number",
      "Description": "CloudWatch Read IOPSLimit Threshold"
    },
    "BackupRetentionPeriod": {
      "Description": "The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.",
      "Default": "35",
      "ConstraintDescription": "Must be between 0 and 35",
      "MaxValue": "35",
      "MinValue": "0",
      "Type": "Number"
    },
    "PreferredMaintenanceWindow": {
      "AllowedPattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):[0-9]{2}:[0-9]{2}-(Mon|Tue|Wed|Thu|Fri|Sat|Sun):[0-9]{2}:[0-9]{2}$",
      "Default": "Sun:07:00-Sun:08:00",
      "Type": "String",
      "Description": "The weekly time range (in UTC) during which system maintenance can occur."
    },
    "Subnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Subnets for RDS Instances. Required 2 Subnets even for singleAZ."
    },
    "CWCPUThreshold": {
      "Default": "60",
      "Type": "Number",
      "Description": "CloudWatch CPUUtilization Threshold"
    },
    "RDSPIRoleManagedPolicyArns": {
      "Default": "",
      "Type": "CommaDelimitedList",
      "Description": "A comma delimited list of IAM policy ARNs for the RDSPIRole IAM role.  IAM ARNs can be found within the Policies section of the AWS IAM console."
    },
    "NotificationTopic": {
      "AllowedPattern": "^arn:aws:sns:(us|eu|ap|sa|ca)-(east|west|north|south|southeast|northeast|central)-[1-9]:[0-9]{12}:.+$||^$",
      "Default": "",
      "Type": "String",
      "Description": "SNS Topic ARN to notify if there are any alarms. OPTIONAL"
    },
    "DBInstanceClass": {
      "Default": "db.r4.large",
      "Type": "String",
      "ConstraintDescription": "Must select a valid database instance type.  The aurora-postgresql engine only supports db.r4 instance types.",
      "Description": "The database instance type",
      "AllowedValues": [
        "db.t2.small",
        "db.t2.medium",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge",
        "db.r4.large",
        "db.r4.xlarge",
        "db.r4.2xlarge",
        "db.r4.4xlarge",
        "db.r4.8xlarge",
        "db.r4.16xlarge"
      ]
    },
    "DeletionProtection": {
      "Default": "true",
      "Type": "String",
      "Description": "Indicates whether the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to true. If you want to delete a stack with a protected instance, update this value to false before you delete the stack.",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "PreferredBackupWindow": {
      "AllowedPattern": "^[0-9]{2}:[0-9]{2}-[0-9]{2}:[0-9]{2}$",
      "Default": "05:00-06:00",
      "Type": "String",
      "Description": "The daily time range during which automated backups are created if automated backups are enabled."
    },
    "MultiAZ": {
      "Default": "True",
      "Type": "String",
      "ConstraintDescription": "Must be either True or False.",
      "Description": "Create a multi-AZ RDS database instance",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "RDSKMSRoleManagedPolicyArns": {
      "Default": "",
      "Type": "CommaDelimitedList",
      "Description": "A comma delimited list of IAM policy ARNs for the RDSKMSRole IAM role.  IAM ARNs can be found within the Policies section of the AWS IAM console."
    },
    "AuroraCloudwatchLogsExports": {
      "Default": "",
      "ConstraintDescription": "",
      "Type": "CommaDelimitedList",
      "Description": "Log types to send to Cloudwatch. Valid values are: error, general, slowquery and audit in any combination as a comma delimited list. Example: general,error.  All logs are set to Never Expire. There is currently no other expire option availiable in CFN."
    },
    "KmsKeyId": {
      "AllowedPattern": "^arn:aws:kms:(us|eu|ap|sa|ca)-(east|west|north|south|southeast|northeast|central)-[1-9]:[0-9]+:(key|alias)/.+$||^$",
      "Default": "",
      "Type": "String",
      "Description": "KMS Key Arn to use for Secrets Manager and Performance Insights. (OPTIONAL)",
      "ConstraintDescription": "Must be a valid KMS Key ID."
    },
    "StorageEncrypted": {
      "Default": "False",
      "Type": "String",
      "ConstraintDescription": "Must be either True or False.",
      "Description": "Specifies whether the DB instance is encrypted.",
      "AllowedValues": [
        "True",
        "False"
      ]
    },
    "AuroraEngine": {
      "Default": "aurora-mysql-5.7.mysql-aurora.2.03.3",
      "Type": "String",
      "Description": "The name and version of the database engine to be used for this DB cluster: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora), and aurora-postgresql",
      "AllowedValues": [
        "aurora-5.6.10a",
        "aurora-mysql-5.7.12",
        "aurora-mysql-5.7.mysql-aurora.2.03.2",
        "aurora-mysql-5.7.mysql-aurora.2.03.3",
        "aurora-postgresql-10.4",
        "aurora-postgresql-10.5",
        "aurora-postgresql-10.6",
        "aurora-postgresql-9.6.3",
        "aurora-postgresql-9.6.6",
        "aurora-postgresql-9.6.8",
        "aurora-postgresql-9.6.9"
      ]
    },
    "EnableCloudwatchLogsExports": {
      "Default": "false",
      "Type": "String",
      "ConstraintDescription": "",
      "Description": "Enable sending Aurora logs to Cloudwatch.",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "InternalZoneId": {
      "Default": "",
      "Type": "String",
      "Description": "The Route53 Internal Hosted Zone ID"
    },
    "Port": {
      "Description": "The port number on which the database accepts connections.",
      "Default": "3306",
      "ConstraintDescription": "Must be between 1150 and 65535",
      "MaxValue": "65535",
      "MinValue": "1150",
      "Type": "Number"
    },
    "DBInstanceIdentifier": {
      "Default": "Aurora",
      "Type": "String",
      "Description": "The DB instance identifier. This parameter is stored as a lowercase string."
    }
  },
  "Conditions": {
    "usePerformanceInsights": {
      "Fn::Equals": [
        {
          "Ref": "EnablePerformanceInsights"
        },
        "true"
      ]
    },
    "UseDBSnapshot": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "DBSnapshotARN"
            },
            ""
          ]
        }
      ]
    },
    "useBacktrackWindow": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "BacktrackWindow"
                },
                "0"
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Fn::FindInMap": [
                "RdsEngineVersions",
                {
                  "Ref": "AuroraEngine"
                },
                "Engine"
              ]
            },
            "aurora"
          ]
        }
      ]
    },
    "RackspaceAlarmsEnabled": {
      "Fn::Equals": [
        {
          "Ref": "EnableRackspaceTicket"
        },
        "True"
      ]
    },
    "SetDbUsername": {
      "Fn::Not": [
        {
          "Fn::Or": [
            {
              "Condition": "isReadReplica"
            },
            {
              "Condition": "UseDBSnapshot"
            }
          ]
        }
      ]
    },
    "isReadReplica": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "ReplicationSource"
            },
            ""
          ]
        }
      ]
    },
    "RDSPIRolePoliciesSet": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Ref": "RDSPIRoleManagedPolicyArns"
                }
              ]
            },
            ""
          ]
        }
      ]
    },
    "isPostgres": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "Engine"
          ]
        },
        "aurora-postgresql"
      ]
    },
    "isInternalHostedZoneIdProvided": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "InternalZoneId"
            },
            ""
          ]
        }
      ]
    },
    "SecretsManagerEnabled": {
      "Fn::Equals": [
        {
          "Ref": "MasterUserPassword"
        },
        ""
      ]
    },
    "isNotification": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "NotificationTopic"
            },
            ""
          ]
        }
      ]
    },
    "useCloudWatchLogsExport": {
      "Fn::Equals": [
        {
          "Ref": "EnableCloudwatchLogsExports"
        },
        "true"
      ]
    },
    "isMultiAZ": {
      "Fn::Equals": [
        {
          "Ref": "MultiAZ"
        },
        "True"
      ]
    },
    "BackupsEnabled": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "BackupRetentionPeriod"
            },
            "0"
          ]
        }
      ]
    },
    "RDSKMSRolePoliciesSet": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Ref": "RDSKMSRoleManagedPolicyArns"
                }
              ]
            },
            ""
          ]
        }
      ]
    },
    "SetKmsKey": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "KmsKeyId"
            },
            ""
          ]
        }
      ]
    }
  },
  "Mappings": {
    "RdsEngineVersions": {
      "aurora-postgresql-10.6": {
        "Engine": "aurora-postgresql",
        "MinorEngineVersion": "10.6",
        "DBParameterGroupFamily": "aurora-postgresql10",
        "MajorEngineVersion": "10"
      },
      "aurora-5.6.10a": {
        "Engine": "aurora",
        "MinorEngineVersion": "5.6.10a",
        "DBParameterGroupFamily": "aurora5.6",
        "MajorEngineVersion": "5.6"
      },
      "aurora-postgresql-10.4": {
        "Engine": "aurora-postgresql",
        "MinorEngineVersion": "10.4",
        "DBParameterGroupFamily": "aurora-postgresql10",
        "MajorEngineVersion": "10"
      },
      "aurora-postgresql-10.5": {
        "Engine": "aurora-postgresql",
        "MinorEngineVersion": "10.5",
        "DBParameterGroupFamily": "aurora-postgresql10",
        "MajorEngineVersion": "10"
      },
      "aurora-postgresql-9.6.8": {
        "Engine": "aurora-postgresql",
        "MinorEngineVersion": "9.6.8",
        "DBParameterGroupFamily": "aurora-postgresql9.6",
        "MajorEngineVersion": "9.6"
      },
      "aurora-postgresql-9.6.9": {
        "Engine": "aurora-postgresql",
        "MinorEngineVersion": "9.6.9",
        "DBParameterGroupFamily": "aurora-postgresql9.6",
        "MajorEngineVersion": "9.6"
      },
      "aurora-mysql-5.7.12": {
        "Engine": "aurora-mysql",
        "MinorEngineVersion": "5.7.12",
        "DBParameterGroupFamily": "aurora-mysql5.7",
        "MajorEngineVersion": "5.7"
      },
      "aurora-postgresql-9.6.3": {
        "Engine": "aurora-postgresql",
        "MinorEngineVersion": "9.6.3",
        "DBParameterGroupFamily": "aurora-postgresql9.6",
        "MajorEngineVersion": "9.6"
      },
      "aurora-mysql-5.7.mysql-aurora.2.03.2": {
        "Engine": "aurora-mysql",
        "MinorEngineVersion": "5.7.mysql_aurora.2.03.2",
        "DBParameterGroupFamily": "aurora-mysql5.7",
        "MajorEngineVersion": "5.7"
      },
      "aurora-mysql-5.7.mysql-aurora.2.03.3": {
        "Engine": "aurora-mysql",
        "MinorEngineVersion": "5.7.mysql_aurora.2.03.3",
        "DBParameterGroupFamily": "aurora-mysql5.7",
        "MajorEngineVersion": "5.7"
      },
      "aurora-postgresql-9.6.6": {
        "Engine": "aurora-postgresql",
        "MinorEngineVersion": "9.6.6",
        "DBParameterGroupFamily": "aurora-postgresql9.6",
        "MajorEngineVersion": "9.6"
      }
    }
  },
  "Resources": {
    "ClusterParameterGroup": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::RDS::DBClusterParameterGroup",
      "Properties": {
        "Parameters": {
          "Fn::If": [
            "isPostgres",
            {
              "timezone": "UTC"
            },
            {
              "binlog_format": {
                "Ref": "BinLogFormat"
              }
            }
          ]
        },
        "Description": {
          "Fn::Sub": "${Environment}-ClusterParameterGroup"
        },
        "Family": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "DBParameterGroupFamily"
          ]
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          }
        ]
      }
    },
    "RDSKMSPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "RDSKMSPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:CreateSecret",
                "secretsmanager:TagResource",
                "kms:GenerateDataKey",
                "kms:Decrypt"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "RDSKMSRole"
          }
        ]
      },
      "Condition": "SecretsManagerEnabled"
    },
    "WriteIOHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "6",
        "Dimensions": [
          {
            "Name": "EngineName",
            "Value": {
              "Fn::FindInMap": [
                "RdsEngineVersions",
                {
                  "Ref": "AuroraEngine"
                },
                "Engine"
              ]
            }
          },
          {
            "Name": "DbClusterIdentifier",
            "Value": {
              "Ref": "RDSCluster"
            }
          }
        ],
        "AlarmActions": [
          {
            "Fn::If": [
              "isNotification",
              {
                "Ref": "NotificationTopic"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Sub": "Alarm if ${RDSCluster} Write IO > ${CWWriteIopsLimit} for 30 minutes"
        },
        "Namespace": "AWS/RDS",
        "Period": "300",
        "ComparisonOperator": "GreaterThanThreshold",
        "Statistic": "Average",
        "Threshold": {
          "Ref": "CWWriteIopsLimit"
        },
        "OKActions": [],
        "MetricName": "VolumeWriteIOPs"
      }
    },
    "RDSPIRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "ManagedPolicyArns": {
          "Fn::If": [
            "RDSPIRolePoliciesSet",
            {
              "Ref": "RDSPIRoleManagedPolicyArns"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "rds.amazonaws.com"
              }
            }
          ]
        }
      },
      "Condition": "usePerformanceInsights"
    },
    "ReadIOHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "6",
        "Dimensions": [
          {
            "Name": "EngineName",
            "Value": {
              "Fn::FindInMap": [
                "RdsEngineVersions",
                {
                  "Ref": "AuroraEngine"
                },
                "Engine"
              ]
            }
          },
          {
            "Name": "DbClusterIdentifier",
            "Value": {
              "Ref": "RDSCluster"
            }
          }
        ],
        "AlarmActions": [
          {
            "Fn::If": [
              "isNotification",
              {
                "Ref": "NotificationTopic"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Sub": "Alarm if ${RDSCluster} Read IO > ${CWReadIopsLimit} for 30 minutes"
        },
        "Namespace": "AWS/RDS",
        "Period": "300",
        "ComparisonOperator": "GreaterThanThreshold",
        "Statistic": "Average",
        "Threshold": {
          "Ref": "CWReadIopsLimit"
        },
        "OKActions": [],
        "MetricName": "VolumeReadIOPs"
      }
    },
    "RDSPIPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "RDSPIPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "pi:*"
              ],
              "Resource": "arn:aws:pi:*:*:metrics/rds/*",
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "RDSPIRole"
          }
        ]
      },
      "Condition": "usePerformanceInsights"
    },
    "RDSKMSRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "ManagedPolicyArns": {
          "Fn::If": [
            "RDSKMSRolePoliciesSet",
            {
              "Ref": "RDSKMSRoleManagedPolicyArns"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "rds.amazonaws.com"
              }
            }
          ]
        }
      },
      "Condition": "SecretsManagerEnabled"
    },
    "CPUAlarmHigh02": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "15",
        "Dimensions": [
          {
            "Name": "DBInstanceIdentifier",
            "Value": {
              "Ref": "RDSInstance02"
            }
          }
        ],
        "AlarmActions": [
          {
            "Fn::If": [
              "RackspaceAlarmsEnabled",
              {
                "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:rackspace-support-urgent"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "isNotification",
              {
                "Ref": "NotificationTopic"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Sub": "Alarm if ${DBInstanceIdentifier} CPU > ${CWCPUThreshold}% for 15 minutes"
        },
        "Namespace": "AWS/RDS",
        "Period": "60",
        "ComparisonOperator": "GreaterThanThreshold",
        "Statistic": "Average",
        "Threshold": {
          "Ref": "CWCPUThreshold"
        },
        "OKActions": [
          {
            "Fn::If": [
              "RackspaceAlarmsEnabled",
              {
                "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:rackspace-support-urgent"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "MetricName": "CPUUtilization"
      },
      "Condition": "isMultiAZ"
    },
    "SecretTargetAttachment": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "TargetType": "AWS::RDS::DBCluster",
        "SecretId": {
          "Ref": "RDSSecret"
        },
        "TargetId": {
          "Ref": "RDSCluster"
        }
      },
      "Condition": "SecretsManagerEnabled"
    },
    "RDSCluster": {
      "DeletionPolicy": "Snapshot",
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "Engine": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "Engine"
          ]
        },
        "DeletionProtection": {
          "Ref": "DeletionProtection"
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}AppGroupName"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          }
        ],
        "MasterUsername": {
          "Fn::If": [
            "UseDBSnapshot",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "MasterUsername"
            }
          ]
        },
        "Port": {
          "Ref": "Port"
        },
        "VpcSecurityGroupIds": {
          "Ref": "SecurityGroupList"
        },
        "MasterUserPassword": {
          "Fn::If": [
            "UseDBSnapshot",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Fn::If": [
                "SecretsManagerEnabled",
                {
                  "Fn::Join": [
                    "",
                    [
                      "{{resolve:secretsmanager:",
                      {
                        "Ref": "RDSSecret"
                      },
                      ":SecretString:password}}"
                    ]
                  ]
                },
                {
                  "Ref": "MasterUserPassword"
                }
              ]
            }
          ]
        },
        "BacktrackWindow": {
          "Fn::If": [
            "useBacktrackWindow",
            {
              "Ref": "BacktrackWindow"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "PreferredBackupWindow": {
          "Fn::If": [
            "BackupsEnabled",
            {
              "Ref": "PreferredBackupWindow"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "ReplicationSourceIdentifier": {
          "Fn::If": [
            "isReadReplica",
            {
              "Ref": "ReplicationSource"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "StorageEncrypted": {
          "Ref": "StorageEncrypted"
        },
        "EngineVersion": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "MinorEngineVersion"
          ]
        },
        "DBClusterParameterGroupName": {
          "Ref": "ClusterParameterGroup"
        },
        "EnableCloudwatchLogsExports": {
          "Fn::If": [
            "useCloudWatchLogsExport",
            {
              "Ref": "AuroraCloudwatchLogsExports"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "BackupRetentionPeriod": {
          "Fn::If": [
            "BackupsEnabled",
            {
              "Ref": "BackupRetentionPeriod"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "PreferredMaintenanceWindow": {
          "Ref": "PreferredMaintenanceWindow"
        },
        "SnapshotIdentifier": {
          "Fn::If": [
            "UseDBSnapshot",
            {
              "Ref": "DBSnapshotARN"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        }
      }
    },
    "RDSInstance01": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "Engine"
          ]
        },
        "DBParameterGroupName": {
          "Ref": "ParameterGroup"
        },
        "EnablePerformanceInsights": {
          "Fn::If": [
            "usePerformanceInsights",
            {
              "Ref": "EnablePerformanceInsights"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBClusterIdentifier": {
          "Ref": "RDSCluster"
        },
        "PubliclyAccessible": {
          "Ref": "PubliclyAccessible"
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${DBInstanceIdentifier}-01"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          }
        ],
        "PerformanceInsightsKMSKeyId": {
          "Fn::If": [
            "usePerformanceInsights",
            {
              "Fn::If": [
                "SetKmsKey",
                {
                  "Ref": "KmsKeyId"
                },
                "alias/aws/rds"
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "PerformanceInsightsRetentionPeriod": {
          "Fn::If": [
            "usePerformanceInsights",
            {
              "Ref": "PerformanceInsightsRetentionPeriod"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "AutoMinorVersionUpgrade": {
          "Ref": "AutoMinorVersionUpgrade"
        },
        "StorageEncrypted": {
          "Ref": "StorageEncrypted"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "OptionGroupName": {
          "Ref": "OptionGroup"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "DBInstanceIdentifier": {
          "Fn::Sub": "${DBInstanceIdentifier}-01"
        }
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "SubnetIds": {
          "Ref": "Subnets"
        },
        "DBSubnetGroupDescription": "VPC Subnet Group for RDS",
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          }
        ]
      }
    },
    "RDSSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "SecretStringTemplate": {
            "Fn::Sub": "{\"username\":\"${MasterUsername}\"}"
          },
          "ExcludeLowercase": "false",
          "ExcludeNumbers": "false",
          "RequireEachIncludedType": "true",
          "ExcludePunctuation": "false",
          "IncludeSpace": "false",
          "GenerateStringKey": "password",
          "ExcludeCharacters": "\"$%&'*+,-./:;@.`|~",
          "ExcludeUppercase": "false",
          "PasswordLength": 24
        },
        "KmsKeyId": {
          "Fn::If": [
            "SetKmsKey",
            {
              "Ref": "KmsKeyId"
            },
            "alias/aws/secretsmanager"
          ]
        },
        "Description": {
          "Fn::Sub": "RDS password for ${AWS::StackName}"
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "SecretsManagedRDSPassword",
            "Value": "True"
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          },
          {
            "Key": "StackName",
            "Value": {
              "Fn::Sub": "${AWS::StackName}-RDS-Password"
            }
          }
        ]
      },
      "Condition": "SecretsManagerEnabled"
    },
    "CPUAlarmHigh01": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "15",
        "Dimensions": [
          {
            "Name": "DBInstanceIdentifier",
            "Value": {
              "Ref": "RDSInstance01"
            }
          }
        ],
        "AlarmActions": [
          {
            "Fn::If": [
              "RackspaceAlarmsEnabled",
              {
                "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:rackspace-support-urgent"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          {
            "Fn::If": [
              "isNotification",
              {
                "Ref": "NotificationTopic"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Sub": "Alarm if ${DBInstanceIdentifier} CPU > ${CWCPUThreshold}% for 15 minutes"
        },
        "Namespace": "AWS/RDS",
        "Period": "60",
        "ComparisonOperator": "GreaterThanThreshold",
        "Statistic": "Average",
        "Threshold": {
          "Ref": "CWCPUThreshold"
        },
        "OKActions": [
          {
            "Fn::If": [
              "RackspaceAlarmsEnabled",
              {
                "Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:rackspace-support-urgent"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        ],
        "MetricName": "CPUUtilization"
      }
    },
    "ReaderInternalRecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Comment": {
          "Fn::Sub": "Internal Record Set for ${InternalRecordName} Read Only Endpoint"
        },
        "Name": {
          "Fn::Sub": "${InternalRecordName}ro.${InternalZoneName}."
        },
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    "0",
                    {
                      "Fn::Split": [
                        ".cluster-",
                        {
                          "Fn::GetAtt": [
                            "RDSCluster",
                            "Endpoint.Address"
                          ]
                        }
                      ]
                    }
                  ]
                },
                ".cluster-ro-",
                {
                  "Fn::Select": [
                    "1",
                    {
                      "Fn::Split": [
                        ".cluster-",
                        {
                          "Fn::GetAtt": [
                            "RDSCluster",
                            "Endpoint.Address"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ],
        "TTL": "300",
        "HostedZoneId": {
          "Ref": "InternalZoneId"
        },
        "Type": "CNAME"
      },
      "Condition": "isInternalHostedZoneIdProvided"
    },
    "WriterInternalRecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Comment": {
          "Fn::Sub": "Internal Record Set for ${InternalRecordName} Writer Endpoint"
        },
        "Name": {
          "Fn::Sub": "${InternalRecordName}.${InternalZoneName}."
        },
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "RDSCluster",
              "Endpoint.Address"
            ]
          }
        ],
        "TTL": "300",
        "HostedZoneId": {
          "Ref": "InternalZoneId"
        },
        "Type": "CNAME"
      },
      "Condition": "isInternalHostedZoneIdProvided"
    },
    "OptionGroup": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::RDS::OptionGroup",
      "Properties": {
        "OptionGroupDescription": {
          "Fn::Sub": "${Environment}-OptionGroup"
        },
        "EngineName": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "Engine"
          ]
        },
        "OptionConfigurations": {
          "Ref": "AWS::NoValue"
        },
        "MajorEngineVersion": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "MajorEngineVersion"
          ]
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          }
        ]
      }
    },
    "RDSInstance02": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "Engine"
          ]
        },
        "DBParameterGroupName": {
          "Ref": "ParameterGroup"
        },
        "EnablePerformanceInsights": {
          "Fn::If": [
            "usePerformanceInsights",
            {
              "Ref": "EnablePerformanceInsights"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "DBClusterIdentifier": {
          "Ref": "RDSCluster"
        },
        "PubliclyAccessible": {
          "Ref": "PubliclyAccessible"
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${DBInstanceIdentifier}-02"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          }
        ],
        "PerformanceInsightsKMSKeyId": {
          "Fn::If": [
            "usePerformanceInsights",
            {
              "Fn::If": [
                "SetKmsKey",
                {
                  "Ref": "KmsKeyId"
                },
                "alias/aws/rds"
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "PerformanceInsightsRetentionPeriod": {
          "Fn::If": [
            "usePerformanceInsights",
            {
              "Ref": "PerformanceInsightsRetentionPeriod"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "AutoMinorVersionUpgrade": {
          "Ref": "AutoMinorVersionUpgrade"
        },
        "OptionGroupName": {
          "Ref": "OptionGroup"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "DBInstanceIdentifier": {
          "Fn::Sub": "${DBInstanceIdentifier}-02"
        },
        "StorageEncrypted": {
          "Ref": "StorageEncrypted"
        }
      },
      "Condition": "isMultiAZ"
    },
    "ParameterGroup": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": {
          "Fn::Sub": "${Environment}-ParameterGroup"
        },
        "Family": {
          "Fn::FindInMap": [
            "RdsEngineVersions",
            {
              "Ref": "AuroraEngine"
            },
            "DBParameterGroupFamily"
          ]
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Rackspace"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ClusterAddress": {
      "Description": "Address of database endpoint",
      "Value": {
        "Fn::GetAtt": [
          "RDSCluster",
          "Endpoint.Address"
        ]
      }
    },
    "DBPort": {
      "Description": "Database endpoint port number",
      "Value": {
        "Fn::GetAtt": [
          "RDSCluster",
          "Endpoint.Port"
        ]
      }
    },
    "ClusterId": {
      "Description": "ID of Aurora Cluster",
      "Value": {
        "Ref": "RDSCluster"
      }
    }
  }
}