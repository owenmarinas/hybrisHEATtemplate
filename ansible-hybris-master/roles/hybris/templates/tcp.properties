######################### HYBRIS SERVER SETTINGS ###########################

java.mem={{ heapMax | default("6G") }}

tomcat.http.port=9001
tomcat.ssl.port=9002
tomcat.ajp.port=8009
tomcat.jmx.port=9003
tomcat.jmx.server.port=9004
tomcat.ajp.connectionTimeout=300000
tomcat.ajp.keepAliveTimeout=300000
tomcat.ajp.backlog=1000
tomcat.ajp.maxThreads=800
tomcat.ajp.minSpareThreads=200
tomcat.maxidletime=10000
tomcat.maxthreads=800
tomcat.minsparethreads=200
tomcat.maxidletime=10000
tomcat.acceptcount=100
tomcat.development.mode=false

tomcat.javaoptions=-Xss{{ threadMax | default("1024k") }} -Xmx{{ heapMax | default("6G") }} -Xms{{ heapMax | default("6G") }} -XX:NewSize={{ newSize | default("1992M") }} -XX:MaxNewSize={{ newMax | default("2048M") }} -XX:MaxTenuringThreshold=5 -XX:MaxPermSize={{ permMax | default("300M") }} -XX:PermSize={{ permSize | default("200M") }} -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+DisableExplicitGC -XX:+{{ setGC | default("UseConcMarkSweepGC") }} -XX:ParallelGCThreads={{ gcThread | default(3) }} -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/hybris/log/ -Xloggc:"/opt/hybris/log/java_gc.log" -XX:+PrintTenuringDistribution -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=60 -XX:SurvivorRatio=4 -XX:TargetSurvivorRatio=70 -XX:+UseParNewGC
tomcat.debugjavaoptions={{ tcDebug | default("-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=18000,suspend=n") }}

############################################################################

###################### JGROUP CLUSTER CONFIGURATION ########################

clustermode=true
cluster.nodes.autodiscovery=true
cluster.broadcast.methods={{ bcast | default("jgroups") }}

cluster.broadcast.method.jgroups=de.hybris.platform.cluster.jgroups.JGroupsBroadcastMethod
cluster.broadcast.method.jgroups.tcp.bind_addr= {{ ansible_eth0['ipv4']['address'] }}
cluster.broadcast.method.jgroups.tcp.bind_port={{ tcpPort | default(7080) }}
cluster.broadcast.method.jgroups.channel.name=hybris-broadcast
cluster.broadcast.method.jgroups.configuration={{ jgroupConf | default("jgroups-tcp.xml') }}

############################################################################

######################## DATABASE SERVER SETTINGS ##########################
db.url={{ dbConnection }}
db.driver={{ dbDriver | default("com.mysql.jdbc.Driver") }}
mysql.optional.tabledefs=CHARSET=utf8 COLLATE=utf8_bin
mysql.tabletype={{ tableType | default("InnoDB") }}
mysql.allow.fractional.seconds=true

# Database #
db.username={{ dbUser }}
db.password={{ dbPass }}
db.tableprefix=
system.unlocking.disabled=true

############################################################################

########################## HIGH PERFORMANCE SETTINGS ###########################
#
# The following settings can only be changed if you have licenced the hybris
# High Performance Module, otherwise changes will not have any effect.
#
###############################################################################

# Maximum cache entries of the hybris instances
# We recommend setting this up to 500000 if you have >5G available for your VM
# (Note: you need to have a valid hybris High Performance Module licence for that)
#cache.main=500000

# Size of a region that stores all other, non-typesystem and non-query objects. Default value is 100000.
regioncache.entityregion.size=140000
regioncache.typesystemregion.evictionpolicy=LRU
regioncache.entityregion.evictionpolicy=LRU
regioncache.querycacheregion.evictionpolicy=LRU
regioncache.querycacheregion.size=30000

# The number of ImpEx worker threads to speed up ImpEx file
# processing on multicore machines
impex.import.workers=8

# The number of catalog sync worker threads
# to speed up Catalog synchronization on multicore machines
catalog.sync.workers=8

# -----------------------------------------------------------------------
# Default passwords
#
# These values are pre-populated into the corresponding UI fields when the associated Hybris project/extension is loaded.
# -----------------------------------------------------------------------
hmc.default.login=admin
hmc.default.password=hellothisisadmin
hmc.default.autologin=false

productcockpit.default.login=
productcockpit.default.password=

cmscockpit.default.login=
cmscockpit.default.password=

# ------------------------------------------------------------------------------------------------------
# Other
# ------------------------------------------------------------------------------------------------------

# Specifies the location, from which the hMC retrieves its configuration:
# -- "true" - for the database
# -- "false" - for the server's file system
# Use "true" for clustered systems.
hmc.structure.db=false

# HMC Debugging -> show jsp start and end comments: true | false
hmc.debug.showjspcomments=true

# setting hmc.developermode to true enables exception texts in the 'oops' page and the
# highlighting of missing localization texts (using square brackets)
hmc.developermode=true

# The maximum number of threads for cron jobs on a single cluster node
cronjob.maxthreads=50

# number of threads used for impex
acceleratorservices.batch.impex.max-threads=8

# If TRUE, service layer interceptors (eg. validators) will be run as part of the hot folder import process.
#impex.legacy.mode=false

#google analytics
google.analytics.domain=auto


############################################################################

######################## DATABASE SERVER SETTINGS ##########################

log4j.rootLogger=error,CONSOLE
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%t] [%X{RemoteAddr}%X{Tenant}%X{CronJob}][%c{1}] %m%n


############################################################################

########################## SOLR SERVER SETTINGS ############################

## do not start local solr instance ##
solrserver.instances.default.autostart=false
